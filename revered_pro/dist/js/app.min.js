/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// change price (currency)\r\nlet prices = document.querySelectorAll('.price');\r\n\r\nprices.forEach(price => {\r\n\tprice.addEventListener('click', function() {\r\n\t\tlet currency = this.getAttribute('data-currency');\r\n\r\n\t\tif (currency === 'usd') {\r\n\t\t\tchangePrice(price, '₽', 'rub', 90);\r\n\t\t} else if (currency === 'rub') {\r\n\t\t\tchangePrice(price, '€', 'eur', 0.0101);\r\n\t\t} else {\r\n\t\t\tchangePrice(price, '$', 'usd', 1.1);\r\n\t\t}\r\n\t});\r\n});\r\n\r\nlet changePrice = (element, sign, newCurrency, rate) => {\r\n\telement.querySelectorAll('span').forEach(span => {\r\n\t\tspan.textContent = sign;\r\n\t});\r\n\r\n\telement.querySelectorAll('span').forEach((span) => {\r\n\t\tlet price = parseInt(span.nextSibling.textContent);\r\n\t\tspan.nextSibling.textContent = Math.round(price * rate);\r\n\t})\r\n\r\n\telement.setAttribute('data-currency', newCurrency);\r\n};\r\n\r\n// change price (period)\r\nlet periods = document.querySelectorAll('.period-text');\r\n\r\nperiods.forEach(period => {\r\n\tperiod.addEventListener('click', function() {\r\n\t\tlet priceData = period.closest('.price-container').querySelector('.price-data');\r\n\t\r\n\t\tif (period.textContent === '/Months') {\r\n\t\t\tperiod.textContent = '/Days';\r\n\t\t\tpriceData.textContent = (priceData.textContent / 30).toFixed(2);\r\n\t\t} else {\r\n\t\t\tperiod.textContent = '/Months';\r\n\t\t\tpriceData.textContent = (priceData.textContent * 30).toFixed(2);\r\n\t\t}\r\n\t});\r\n})\n\n//# sourceURL=webpack://revered_pro/./src/js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/script.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;